#server.port = 5000
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/birps?useSSL=false
#spring.datasource.url = jdbc:mysql://localhost:3306/birps?useSSL=false&zeroDateTimeBehavior=convertToNull
#What does this do in connection string ---- &zeroDateTimeBehavior=convertToNull
spring.datasource.url = jdbc:mysql://birps-dev.cneqetm29mpv.us-east-1.rds.amazonaws.com:3306/birps?useSSL=false

# Username and password
spring.datasource.username = masterUser
spring.datasource.password = masterPassword

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in the project
#spring.jpa.hibernate.ddl-auto = update

# schema will be automatically updated accordingly to java entities found in the project and cleared at the end
#spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
